1. 컨테이너 기술이란 무엇입니까?

컨테이너 기술은 응용 프로그램과 그에 필요한 모든 라이브러리, 종속성, 실행 환경 등을 하나의 패키지로 묶어서 독립적인 환경에서 실행할 수 있도록 하는 기술입니다. 

이러한 컨테이너는 서로 격리되어 있으며, 호스트 시스템의 자원을 효율적으로 공유하면서도 다른 컨테이너와의 간섭을 최소화합니다. 

이는 가상 머신과 비교해 가볍고 빠르며, 개발 및 배포 환경에서 일관성을 제공하는 장점이 있습니다.

2. 도커란 무엇입니까?

도커(Docker)는 컨테이너 기술을 기반으로 하는 오픈소스 플랫폼으로, 애플리케이션을 패키징하고, 배포하고, 실행할 수 있게 해줍니다. 도커는 경량의 컨테이너를 사용하여 응용 프로그램을 환경에 독립적으로 배포하고 실행할 수 있으며, 이를 통해 개발부터 배포까지 일관된 환경을 제공함으로써 효율적인 DevOps 프로세스를 지원합니다.

3. 도커 파일, 도커 이미지, 도커 컨테이너의 개념은 무엇이고, 서로 어떤 관계입니까?

도커 파일 (Dockerfile): 도커 이미지를 생성하기 위한 스크립트 파일입니다. Dockerfile에는 어떤 베이스 이미지를 사용할지, 필요한 패키지나 의존성은 무엇인지, 어떻게 애플리케이션을 빌드하고 실행할지 등의 지침이 포함됩니다.

도커 이미지 (Docker Image): 도커 파일을 기반으로 생성된 불변의 템플릿입니다. 애플리케이션 코드, 라이브러리, 의존성 등을 포함하며, 컨테이너를 실행하는 데 사용됩니다.

도커 컨테이너 (Docker Container): 도커 이미지를 실행한 인스턴스입니다. 각 컨테이너는 고유한 격리된 환경에서 실행되며, 필요한 모든 리소스를 이미지에서 가져옵니다. 컨테이너는 가볍고 빠르게 시작할 수 있습니다.

관계: Dockerfile을 기반으로 Docker 이미지를 생성하고, 이 이미지를 통해 Docker 컨테이너가 실행됩니다. Dockerfile은 이미지를 만드는 조리법으로, 이미지는 해당 조리법을 따르는 템플릿이고, 컨테이너는 이 템플릿을 실행하는 인스턴스라고 볼 수 있습니다.

[추가 참조](https://github.com/drum-grammer/docker-pro-2308/issues?q=label%3A%22%F0%9F%91%8D+%EA%B0%84%EA%B2%B0+%EC%A0%95%ED%99%95%22+is%3Aclosed)
